{"version":3,"sources":["scripts/main.js"],"names":["headers","document","querySelector","tbody","rows","addEventListener","e","target","index","firstElementChild","children","findIndex","tag","sort","a","b","start","innerText","end","parseSalary","salary","parseFloat","slice","replace","localeCompare","forEach","el","prepend"],"mappings":";AAAA,aAMA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAJA,IAAMA,EAAUC,SAASC,cAAc,SACjCC,EAAQF,SAASC,cAAc,SAC/BE,EAAOD,EAAMC,KAEnBJ,EAAQK,iBAAiB,QAAS,SAAAC,GAC1BC,IAAAA,EAASD,EAAEC,OAEXC,EAAQ,EADKR,EAAQS,kBAAkBC,UACfC,UAAU,SAAAC,GAAOA,OAAAA,IAAQL,IAE1C,EAAIH,GAAMS,KAAK,SAACC,EAAGC,GACxBC,IAAAA,EAAQF,EAAEJ,SAASF,GAAOS,UAC1BC,EAAMH,EAAEL,SAASF,GAAOS,UAE1BV,GAAqB,WAArBA,EAAOU,UAAwB,CAC3BE,IAAAA,EAAc,SAAAC,GAClBC,OAAAA,WAAWD,EAAOE,MAAM,GAAGC,QAAQ,IAAK,OAEnCJ,OAAAA,EAAYD,GAAOC,EAAYH,GAE/BE,OAAAA,EAAIM,cAAcR,KAIxBS,QAAQ,SAAAC,GAAMvB,OAAAA,EAAMwB,QAAQD","file":"main.8778af95.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst headers = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst rows = tbody.rows;\n\nheaders.addEventListener('click', e => {\n  const target = e.target;\n  const headerList = headers.firstElementChild.children;\n  const index = [...headerList].findIndex(tag => tag === target);\n\n  const sort = [...rows].sort((a, b) => {\n    const start = a.children[index].innerText;\n    const end = b.children[index].innerText;\n\n    if (target.innerText === 'Salary') {\n      const parseSalary = salary =>\n        parseFloat(salary.slice(1).replace(',', '.'));\n\n      return parseSalary(end) - parseSalary(start);\n    } else {\n      return end.localeCompare(start);\n    }\n  });\n\n  sort.forEach(el => tbody.prepend(el));\n});\n"]}